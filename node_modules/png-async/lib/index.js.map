{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import stream = require(\"stream\");\r\nimport Parser = require(\"./parser\");\r\nimport Packer = require(\"./packer\");\r\n\r\nexport interface IImageOptions {\r\n    width?: number;\r\n    height?: number;\r\n    fill?: boolean;\r\n    checkCRC?: boolean;\r\n    deflateChunkSize?: number;\r\n    deflateLevel?: number;\r\n    deflateStrategy?: EDeflateStrategy;\r\n    filterType?: EFilterType;\r\n}\r\n\r\nexport enum EDeflateStrategy {\r\n    DEFAULT_STRATEGY = 0,\r\n    FILTERED = 1,\r\n    HUFFMAN_ONLY = 2,\r\n    RLE = 3,\r\n    FIXED = 4\r\n}\r\n\r\nexport enum EFilterType {\r\n    Auto = -1,\r\n    None = 0,\r\n    Sub = 1,\r\n    Up = 2,\r\n    Average = 3,\r\n    Paeth = 4\r\n}\r\n\r\nexport function createImage(option?: IImageOptions): Image {\r\n    return new Image(option);\r\n}\r\n\r\nexport class Image extends stream.Duplex {\r\n\r\n    width: number;\r\n    height: number;\r\n    gamma: number;\r\n    data: Buffer;\r\n\r\n    private _parser: Parser;\r\n    private _packer: Packer;\r\n\r\n    constructor(option: IImageOptions = {}) {\r\n        super();\r\n\r\n        this.width = option.width || 0;\r\n        this.height = option.height || 0;\r\n\r\n        if (this.width > 0 && this.height > 0) {\r\n            this.data = Buffer.alloc(4 * this.width * this.height);\r\n\r\n            if (option.fill) {\r\n                this.data.fill(0);\r\n            }\r\n        } else {\r\n            this.data = null;\r\n        }\r\n\r\n        this.gamma = 0;\r\n        this.writable = true;\r\n\r\n        this._parser = new Parser(option || {});\r\n\r\n        this._parser.on(\"error\", this.emit.bind(this, \"error\"));\r\n        this._parser.on(\"close\", this._handleClose.bind(this));\r\n        this._parser.on(\"metadata\", this._metadata.bind(this));\r\n        this._parser.on(\"gamma\", this._gamma.bind(this));\r\n        this._parser.on(\"parsed\", (data) => {\r\n            this.data = data;\r\n            this.emit(\"parsed\", data);\r\n        });\r\n\r\n        this._packer = new Packer(option);\r\n\r\n        this._packer.on(\"data\", this.emit.bind(this, \"data\"));\r\n        this._packer.on(\"end\", this.emit.bind(this, \"end\"));\r\n        this._packer.on(\"close\", this._handleClose.bind(this));\r\n        this._packer.on(\"error\", this.emit.bind(this, \"error\"));\r\n    }\r\n\r\n    pack(): Image {\r\n\r\n        setImmediate(() => {\r\n            this._packer.pack(this.data, this.width, this.height);\r\n            this.readable = true;\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    parse(data: Buffer, callback?: (err: Error, image: Image) => void): Image {\r\n\r\n        if (callback) {\r\n            let onParsed = null, onError = null;\r\n\r\n            this.once(\"parsed\", onParsed = (data) => {\r\n                this.removeListener(\"error\", onError);\r\n\r\n                this.data = data;\r\n                callback(null, this);\r\n            });\r\n\r\n            this.once(\"error\", onError = (err) => {\r\n                this.removeListener(\"parsed\", onParsed);\r\n\r\n                callback(err, null);\r\n            });\r\n        }\r\n\r\n        this.end(data);\r\n\r\n        return this;\r\n    }\r\n\r\n    _write(data, encoding, callback) {\r\n        return this._parser._write(data, encoding, callback);\r\n    }\r\n\r\n    end(data?): void {\r\n        return this._parser.end(data);\r\n    }\r\n\r\n    bitblt(dst: Image, sx: number, sy: number, w: number, h: number, dx: number, dy: number) {\r\n\r\n        if (sx > this.width || sy > this.height || sx + w > this.width || sy + h > this.height) {\r\n            throw new Error(\"bitblt reading outside image\");\r\n        }\r\n        if (dx > dst.width || dy > dst.height || dx + w > dst.width || dy + h > dst.height) {\r\n            throw new Error(\"bitblt writing outside image\");\r\n        }\r\n\r\n        for (let y = 0; y < h; y++) {\r\n            this.data.copy(\r\n                dst.data,\r\n                ((dy + y) * dst.width + dx) << 2,\r\n                ((sy + y) * this.width + sx) << 2,\r\n                ((sy + y) * this.width + sx + w) << 2\r\n            );\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    _read() {\r\n\r\n    }\r\n\r\n    private _metadata(metadata): void {\r\n\r\n        this.width = metadata.width;\r\n        this.height = metadata.height;\r\n        this.data = metadata.data;\r\n\r\n        delete metadata.data;\r\n        this.emit(\"metadata\", metadata);\r\n    }\r\n\r\n    private _gamma(gamma: number): void {\r\n        this.gamma = gamma;\r\n    }\r\n\r\n    private _handleClose(): void {\r\n        if (!this._parser.writable && !this._packer.readable) {\r\n            this.emit(\"close\");\r\n        }\r\n    }\r\n}\r\n"]}