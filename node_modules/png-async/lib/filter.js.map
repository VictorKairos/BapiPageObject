{"version":3,"sources":["filter.ts"],"names":[],"mappings":"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","file":"filter.js","sourcesContent":["import png = require(\"./index\");\r\nimport ChunkStream = require(\"./chunk-stream\");\r\n\r\nconst pixelBppMap = {\r\n    1: { // L\r\n        0: 0,\r\n        1: 0,\r\n        2: 0,\r\n        3: 0xff\r\n    },\r\n    2: { // LA\r\n        0: 0,\r\n        1: 0,\r\n        2: 0,\r\n        3: 1\r\n    },\r\n    3: { // RGB\r\n        0: 0,\r\n        1: 1,\r\n        2: 2,\r\n        3: 0xff\r\n    },\r\n    4: { // RGBA\r\n        0: 0,\r\n        1: 1,\r\n        2: 2,\r\n        3: 3\r\n    }\r\n};\r\n\r\nfunction PaethPredictor(left: number, above: number, upLeft: number): number {\r\n\r\n    const p = left + above - upLeft;\r\n    const pLeft = Math.abs(p - left);\r\n    const pAbove = Math.abs(p - above);\r\n    const pUpLeft = Math.abs(p - upLeft);\r\n\r\n    if (pLeft <= pAbove && pLeft <= pUpLeft) {\r\n        return left;\r\n    } else if (pAbove <= pUpLeft) {\r\n        return above;\r\n    } else {\r\n        return upLeft;\r\n    }\r\n};\r\n\r\nexport = Filter;\r\n\r\nclass Filter extends ChunkStream {\r\n\r\n    private _width: number;\r\n    private _height: number;\r\n    private _bpp: number;\r\n    private _data: Buffer;\r\n    private _option: png.IImageOptions;\r\n    private _line: number;\r\n    private _filterTypes: png.EFilterType[];\r\n    private _filters: { [index: number]: Function };\r\n\r\n    constructor(width: number, height: number, bpp: number, data: Buffer, option: png.IImageOptions) {\r\n        super();\r\n\r\n        this._width = width;\r\n        this._height = height;\r\n        this._bpp = bpp;\r\n        this._data = data;\r\n        this._option = option;\r\n\r\n        this._line = 0;\r\n\r\n        if (option.filterType === undefined || option.filterType === -1) {\r\n            this._filterTypes = [0, 1, 2, 3, 4];\r\n        } else if (typeof option.filterType === \"number\") {\r\n            this._filterTypes = [option.filterType];\r\n        }\r\n\r\n        this._filters = {\r\n            0: this._filterNone.bind(this),\r\n            1: this._filterSub.bind(this),\r\n            2: this._filterUp.bind(this),\r\n            3: this._filterAvg.bind(this),\r\n            4: this._filterPaeth.bind(this)\r\n        };\r\n\r\n        this.read(this._width * bpp + 1, this._reverseFilterLine.bind(this));\r\n    }\r\n\r\n    filter(): Buffer {\r\n\r\n        const pxData = this._data;\r\n        const rawData = Buffer.alloc(((this._width << 2) + 1) * this._height);\r\n        let i: number, l: number, y: number, min: number, sel: number, sum: number;\r\n\r\n        for (y = 0; y < this._height; y++) {\r\n            // find best filter for this line (with lowest sum of values)\r\n            min = Infinity;\r\n            sel = 0;\r\n\r\n            for (i = 0, l = this._filterTypes.length; i < l; i++) {\r\n                sum = this._filters[this._filterTypes[i]](pxData, y, null);\r\n\r\n                if (sum < min) {\r\n                    sel = this._filterTypes[i];\r\n                    min = sum;\r\n                }\r\n            }\r\n\r\n            this._filters[sel](pxData, y, rawData);\r\n        }\r\n\r\n        return rawData;\r\n    }\r\n\r\n    private _reverseFilterLine(rawData: Buffer): void {\r\n\r\n        const pxData = this._data;\r\n        const pxLineLength = this._width << 2;\r\n        const pxRowPos = this._line * pxLineLength;\r\n        const filter = rawData[0];\r\n        let i: number, x: number, pxPos: number, rawPos: number, idx: number, left: number, up: number, add: number, upLeft: number;\r\n\r\n        if (filter === 0) {\r\n            for (x = 0; x < this._width; x++) {\r\n                pxPos = pxRowPos + (x << 2);\r\n                rawPos = 1 + x * this._bpp;\r\n\r\n                for (i = 0; i < 4; i++) {\r\n                    idx = pixelBppMap[this._bpp][i];\r\n\r\n                    pxData[pxPos + i] = idx !== 0xff ? rawData[rawPos + idx] : 0xff;\r\n                }\r\n            }\r\n        } else if (filter === 1) {\r\n            for (x = 0; x < this._width; x++) {\r\n                pxPos = pxRowPos + (x << 2);\r\n                rawPos = 1 + x * this._bpp;\r\n\r\n                for (i = 0; i < 4; i++) {\r\n                    idx = pixelBppMap[this._bpp][i];\r\n                    left = x > 0 ? pxData[pxPos + i - 4] : 0;\r\n\r\n                    pxData[pxPos + i] = idx !== 0xff ? rawData[rawPos + idx] + left : 0xff;\r\n                }\r\n            }\r\n        } else if (filter === 2) {\r\n            for (x = 0; x < this._width; x++) {\r\n                pxPos = pxRowPos + (x << 2);\r\n                rawPos = 1 + x * this._bpp;\r\n\r\n                for (i = 0; i < 4; i++) {\r\n                    idx = pixelBppMap[this._bpp][i];\r\n                    up = this._line > 0 ? pxData[pxPos - pxLineLength + i] : 0;\r\n\r\n                    pxData[pxPos + i] = idx !== 0xff ? rawData[rawPos + idx] + up : 0xff;\r\n                }\r\n            }\r\n        } else if (filter === 3) {\r\n            for (x = 0; x < this._width; x++) {\r\n                pxPos = pxRowPos + (x << 2);\r\n                rawPos = 1 + x * this._bpp;\r\n\r\n                for (i = 0; i < 4; i++) {\r\n                    idx = pixelBppMap[this._bpp][i];\r\n                    left = x > 0 ? pxData[pxPos + i - 4] : 0;\r\n                    up = this._line > 0 ? pxData[pxPos - pxLineLength + i] : 0;\r\n                    add = Math.floor((left + up) / 2);\r\n\r\n                    pxData[pxPos + i] = idx !== 0xff ? rawData[rawPos + idx] + add : 0xff;\r\n                }\r\n            }\r\n        } else if (filter === 4) {\r\n            for (x = 0; x < this._width; x++) {\r\n                pxPos = pxRowPos + (x << 2);\r\n                rawPos = 1 + x * this._bpp;\r\n\r\n                for (i = 0; i < 4; i++) {\r\n                    idx = pixelBppMap[this._bpp][i];\r\n                    left = x > 0 ? pxData[pxPos + i - 4] : 0;\r\n                    up = this._line > 0 ? pxData[pxPos - pxLineLength + i] : 0;\r\n                    upLeft = x > 0 && this._line > 0 ? pxData[pxPos - pxLineLength + i - 4] : 0;\r\n                    add = PaethPredictor(left, up, upLeft);\r\n\r\n                    pxData[pxPos + i] = idx !== 0xff ? rawData[rawPos + idx] + add : 0xff;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._line++;\r\n\r\n        if (this._line < this._height) {\r\n            this.read(this._width * this._bpp + 1, this._reverseFilterLine.bind(this));\r\n        } else {\r\n            this.emit(\"complete\", this._data, this._width, this._height);\r\n        }\r\n    }\r\n\r\n    private _filterNone(pxData: Buffer, y: number, rawData: Buffer): number {\r\n\r\n        const pxRowLength = this._width << 2;\r\n        const rawRowLength = pxRowLength + 1;\r\n        let sum = 0;\r\n\r\n        if (!rawData) {\r\n            for (let x = 0; x < pxRowLength; x++) {\r\n                sum += Math.abs(pxData[y * pxRowLength + x]);\r\n            }\r\n        } else {\r\n            rawData[y * rawRowLength] = 0;\r\n            pxData.copy(rawData, rawRowLength * y + 1, pxRowLength * y, pxRowLength * (y + 1));\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    private _filterSub(pxData: Buffer, y: number, rawData: Buffer): number {\r\n\r\n        const pxRowLength = this._width << 2;\r\n        const rawRowLength = pxRowLength + 1;\r\n        let sum = 0;\r\n        let left: number, val: number;\r\n\r\n        if (rawData) {\r\n            rawData[y * rawRowLength] = 1;\r\n        }\r\n\r\n        for (let x = 0; x < pxRowLength; x++) {\r\n            left = x >= 4 ? pxData[y * pxRowLength + x - 4] : 0;\r\n            val = pxData[y * pxRowLength + x] - left;\r\n\r\n            if (!rawData) {\r\n                sum += Math.abs(val);\r\n            } else {\r\n                rawData[y * rawRowLength + 1 + x] = val;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    private _filterUp(pxData: Buffer, y: number, rawData: Buffer): number {\r\n\r\n        const pxRowLength = this._width << 2;\r\n        const rawRowLength = pxRowLength + 1;\r\n        let sum = 0;\r\n        let up: number, val: number;\r\n\r\n        if (rawData) {\r\n            rawData[y * rawRowLength] = 2;\r\n        }\r\n\r\n        for (let x = 0; x < pxRowLength; x++) {\r\n            up = y > 0 ? pxData[(y - 1) * pxRowLength + x] : 0;\r\n            val = pxData[y * pxRowLength + x] - up;\r\n\r\n            if (!rawData) {\r\n                sum += Math.abs(val);\r\n            } else {\r\n                rawData[y * rawRowLength + 1 + x] = val;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    private _filterAvg(pxData: Buffer, y: number, rawData: Buffer): number {\r\n\r\n        const pxRowLength = this._width << 2;\r\n        const rawRowLength = pxRowLength + 1;\r\n        let sum = 0;\r\n        let left: number, up: number, val: number;\r\n\r\n        if (rawData) {\r\n            rawData[y * rawRowLength] = 3;\r\n        }\r\n\r\n        for (let x = 0; x < pxRowLength; x++) {\r\n            left = x >= 4 ? pxData[y * pxRowLength + x - 4] : 0;\r\n            up = y > 0 ? pxData[(y - 1) * pxRowLength + x] : 0;\r\n            val = pxData[y * pxRowLength + x] - ((left + up) >> 1);\r\n\r\n            if (!rawData) {\r\n                sum += Math.abs(val);\r\n            } else {\r\n                rawData[y * rawRowLength + 1 + x] = val;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n\r\n    private _filterPaeth(pxData: Buffer, y: number, rawData: Buffer): number {\r\n\r\n        const pxRowLength = this._width << 2;\r\n        const rawRowLength = pxRowLength + 1;\r\n        let sum = 0;\r\n        let left: number, up: number, upLeft: number, val: number;\r\n\r\n        if (rawData) {\r\n            rawData[y * rawRowLength] = 4;\r\n        }\r\n\r\n        for (let x = 0; x < pxRowLength; x++) {\r\n            left = x >= 4 ? pxData[y * pxRowLength + x - 4] : 0;\r\n            up = y > 0 ? pxData[(y - 1) * pxRowLength + x] : 0;\r\n            upLeft = x >= 4 && y > 0 ? pxData[(y - 1) * pxRowLength + x - 4] : 0;\r\n            val = pxData[y * pxRowLength + x] - PaethPredictor(left, up, upLeft);\r\n\r\n            if (!rawData) {\r\n                sum += Math.abs(val);\r\n            } else {\r\n                rawData[y * rawRowLength + 1 + x] = val;\r\n            }\r\n        }\r\n\r\n        return sum;\r\n    }\r\n}\r\n"]}