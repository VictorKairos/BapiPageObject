{"version":3,"sources":["packer.ts"],"names":[],"mappings":"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","file":"packer.js","sourcesContent":["import zlib = require(\"zlib\");\r\nimport stream = require(\"stream\");\r\nimport png = require(\"./index\");\r\nimport constants = require(\"./constants\");\r\nimport CrcStream = require(\"./crc\");\r\nimport Filter = require(\"./filter\");\r\n\r\nexport = Packer;\r\n\r\nclass Packer extends stream.Readable {\r\n\r\n    private _option: png.IImageOptions;\r\n\r\n    constructor(option: png.IImageOptions) {\r\n        super();\r\n\r\n        this._option = option;\r\n\r\n        option.deflateChunkSize = option.deflateChunkSize || 32 * 1024;\r\n        option.deflateLevel = option.deflateLevel || 9;\r\n        if (option.deflateStrategy === undefined) {\r\n            option.deflateStrategy = png.EDeflateStrategy.RLE;\r\n        }\r\n\r\n        this.readable = true;\r\n    }\r\n\r\n    pack(data: Buffer, width: number, height: number): void {\r\n\r\n        // Signature\r\n        this.emit(\"data\", Buffer.from(constants.PNG_SIGNATURE));\r\n        this.emit(\"data\", this._packIHDR(width, height));\r\n\r\n        // filter pixel data\r\n        const filter = new Filter(width, height, 4, data, this._option);\r\n        data = filter.filter();\r\n\r\n        // compress it\r\n        const deflate = zlib.createDeflate({\r\n            chunkSize: this._option.deflateChunkSize,\r\n            level: this._option.deflateLevel,\r\n            strategy: this._option.deflateStrategy\r\n        });\r\n\r\n        deflate.on(\"error\", this.emit.bind(this, \"error\"));\r\n\r\n        deflate.on(\"data\", (data: Buffer) => {\r\n            this.emit(\"data\", this._packIDAT(data));\r\n        });\r\n\r\n        deflate.on(\"end\", () => {\r\n            this.emit(\"data\", this._packIEND());\r\n            this.emit(\"end\");\r\n        });\r\n\r\n        deflate.end(data);\r\n    }\r\n\r\n    _read() {\r\n        //todo\r\n    }\r\n\r\n    private _packChunk(type: number, data?: Buffer): Buffer {\r\n\r\n        const len = (data ? data.length : 0);\r\n        const buf = Buffer.alloc(len + 12);\r\n\r\n        buf.writeUInt32BE(len, 0);\r\n        buf.writeUInt32BE(type, 4);\r\n\r\n        if (data) {\r\n            data.copy(buf, 8);\r\n        }\r\n\r\n        buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);\r\n\r\n        return buf;\r\n    }\r\n\r\n    private _packIHDR(width: number, height: number) {\r\n\r\n        const buf = Buffer.alloc(13);\r\n        buf.writeUInt32BE(width, 0);\r\n        buf.writeUInt32BE(height, 4);\r\n        buf[8] = 8;\r\n        buf[9] = 6; // colorType\r\n        buf[10] = 0; // compression\r\n        buf[11] = 0; // filter\r\n        buf[12] = 0; // interlace\r\n\r\n        return this._packChunk(constants.TYPE_IHDR, buf);\r\n    }\r\n\r\n    private _packIDAT(data: Buffer): Buffer {\r\n        return this._packChunk(constants.TYPE_IDAT, data);\r\n    }\r\n\r\n    private _packIEND(): Buffer {\r\n        return this._packChunk(constants.TYPE_IEND, null);\r\n    }\r\n}\r\n"]}